<template>
  <div class="region-manage-page">
    <div class="tab-nav-bar">
      <draggable v-model="tags" class="tab-list" item-key="path" :animation="200" :ghost-class="'tab-ghost'">
        <template #item="{element: tag, index}">
          <div class="tab-item" :class="{active: activePath === tag.path}" @click="handleTabClick(tag)">
            <span class="tab-icon"><i :class="['fas', tag.icon]"></i></span>
            {{ tag.title }}
            <span v-if="tag.closable" class="tab-close" @click.stop="handleTabClose(tag, index)"><i class="fas fa-times"></i></span>
          </div>
        </template>
      </draggable>
      <TabMenu :onCloseOther="handleMenuCloseOther" :onCloseAll="handleMenuCloseAll" />
    </div>
    <div class="card">
      <div class="top-bar">
        <el-input v-model="searchName" placeholder="请输入行政区名称" style="width: 200px; margin-right: 10px;" />
        <el-button type="primary" @click="fetchTree">查询</el-button>
        <el-button @click="resetSearch">重置</el-button>
        <el-button type="primary" @click="onAddRoot">新建</el-button>
      </div>
      <div class="main-content">
        <el-table
          :data="treeData"
          style="width: 100%"
          row-key="id"
          border
          default-expand-all
          :tree-props="{children: 'children', hasChildren: 'hasChildren'}"
        >
          <el-table-column prop="dname" label="行政区名称" min-width="200">
            <template #default="scope">
              <span class="region-name" :style="{ paddingLeft: scope.row._level ? (scope.row._level * 20) + 'px' : '0px' }">
                {{ scope.row.dname }}
              </span>
            </template>
          </el-table-column>
          <el-table-column prop="level" label="级别" width="120">
            <template #default="scope">
              <el-tag :type="getLevelType(scope.row.level)" size="small">
                {{ getLevelLabel(scope.row.level) }}
              </el-tag>
            </template>
          </el-table-column>
          <el-table-column prop="sort" label="排序" width="80" align="center" />
          <el-table-column prop="createTime" label="创建时间" width="180" />
          <el-table-column prop="updateTime" label="更新时间" width="180" />
          <el-table-column label="操作" width="200" fixed="right">
            <template #default="scope">
              <el-button type="primary" link @click="onAddChild(scope.row)">添加下级</el-button>
              <el-button type="primary" link @click="onEdit(scope.row)">编辑</el-button>
              <el-button type="danger" link @click="onDelete(scope.row)">删除</el-button>
            </template>
          </el-table-column>
        </el-table>
      </div>
    </div>
    <!-- 新建/编辑弹窗 -->
    <el-dialog v-model="showDialog" :title="dialogTitle" width="400px" :close-on-click-modal="false">
      <el-form :model="form" :rules="rules" ref="formRef" label-width="80px">
        <el-form-item label="上级部门" prop="parent" v-if="!isEdit">
          <el-select
            v-model="form.parent"
            placeholder="请选择上级部门"
            style="width: 100%"
            filterable
            :filter-method="filterParentOptions"
            @visible-change="handleDropdownVisible"
            @change="handleParentChange"
            popper-class="region-select-dropdown"
          >
            <el-option
              v-for="item in selectOptions"
              :key="item.id"
              :label="item.dname"
              :value="item.id"
              :disabled="!item._allowSelect"
            >
              <span :style="{ 
                paddingLeft: (item._level * 20) + 'px',
                color: item._allowSelect ? '' : '#999'
              }">{{ item.dname }}</span>
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="名称" prop="dname">
          <el-input v-model="form.dname" placeholder="请输入名称" />
        </el-form-item>
        <el-form-item label="级别" prop="level">
          <el-select v-model="form.level" placeholder="请选择">
            <el-option label="省级" value="province" />
            <el-option label="市级" value="city" />
            <el-option label="区县级" value="district" />
          </el-select>
        </el-form-item>
        <el-form-item label="排序" prop="sort">
          <el-input-number v-model="form.sort" :min="0" />
        </el-form-item>
      </el-form>
      <template #footer>
        <el-button @click="showDialog = false">取消</el-button>
        <el-button type="primary" @click="onSubmit">确定</el-button>
      </template>
    </el-dialog>
  </div>
</template>

<script setup>
import { ref, onMounted, watch, computed } from 'vue'
import { ElMessage, ElMessageBox } from 'element-plus'
import axios from 'axios'
import draggable from 'vuedraggable'
import TabMenu from '../components/TabMenu.vue'
import { useRouter } from 'vue-router'

const router = useRouter()

// 标签导航相关
const tags = ref([
  { title: '首页', path: '/main', icon: 'fa-home', closable: false },
  { title: '行政区管理', path: '/main/region-manage', icon: 'fa-map-marker-alt', closable: true }
])
const activePath = ref('/main/region-manage')

function handleTabClick(tag) {
  activePath.value = tag.path
  router.push(tag.path)
}

function handleTabClose(tag, idx) {
  tags.value.splice(idx, 1)
  if (activePath.value === tag.path) {
    activePath.value = '/main'
    router.push('/main')
  }
}

function handleMenuCloseOther() {
  tags.value = tags.value.filter(tag => !tag.closable || tag.path === activePath.value)
}

function handleMenuCloseAll() {
  tags.value = tags.value.filter(tag => !tag.closable)
  activePath.value = '/main'
  router.push('/main')
}

// 原有的代码
const searchName = ref('')
const treeData = ref([])
const showDialog = ref(false)
const dialogTitle = ref('新建行政区')
const form = ref({ id: null, dname: '', level: '', sort: 0, parent: 0 })
const formRef = ref()
const isEdit = ref(false)
const filterKeyword = ref('')

// ... 其他原有代码 ...

</script>

<style scoped>
.region-manage-page {
  padding: 24px;
  background: #f5f6fa;
  min-height: 100vh;
}

.card {
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.04);
  padding: 24px;
}

.tab-nav-bar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #fff;
  padding: 0 0 8px 0;
  border-radius: 10px 10px 0 0;
  border-bottom: 1px solid #f0f0f0;
  margin-bottom: 18px;
}

.tab-list {
  display: flex;
  align-items: flex-end;
  gap: 2px;
}

.tab-item {
  display: flex;
  align-items: center;
  background: #f7f7f7;
  border-radius: 10px 10px 0 0;
  padding: 0 18px 0 14px;
  height: 38px;
  font-size: 15px;
  color: #222;
  cursor: pointer;
  position: relative;
  margin-right: 2px;
  transition: background 0.2s, color 0.2s;
}

.tab-item.active {
  background: #fff;
  color: #2563eb;
  font-weight: 600;
  border-bottom: 2.5px solid #2563eb;
  box-shadow: 0 2px 8px rgba(76,132,255,0.04);
}

.tab-item:not(.active):hover {
  background: #f0f7ff;
  color: #2563eb;
}

.tab-icon {
  margin-right: 6px;
  font-size: 16px;
  display: flex;
  align-items: center;
}

.tab-close {
  margin-left: 10px;
  color: #bbb;
  font-size: 13px;
  cursor: pointer;
  transition: color 0.2s;
}

.tab-close:hover {
  color: #ff4d4f;
}

// ... 其他原有样式 ...
</style> 